# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head or not head.next or k < 1:
            return head

        current = head
        length = 1
        while current.next:
            length += 1
            current = current.next
        
        if k % length == 0:
            return head
            
        current.next = head
        
        new_tail = head
        effcetive = k % length
        for _ in range(length - effcetive - 1):
            new_tail = new_tail.next
        
        new_head = new_tail.next
        new_tail.next = None

        return new_head