class Solution(object):
    def map_letters_to_primes(self):
        # 前26个质数
        primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101]
        # 字母表
        letters = 'abcdefghijklmnopqrstuvwxyz'
        # 创建映射字典
        prime_map = {letters[i]: primes[i] for i in range(26)}
        return prime_map

    def groupAnagrams(self, strs):
        """
        :type strs: List[str]
        :rtype: List[List[str]]
        """
        prime_map = self.map_letters_to_primes()
        strs_dict = {}

        for i in strs:
            product = 1
            for j in i:
                product *= prime_map[j]
            
            if product in strs_dict.keys():
                strs_dict[product].append(i)
            else:
                strs_dict[product] = [i]

        result = []
        for _, v in strs_dict.items():
            result.append(v)
        return result