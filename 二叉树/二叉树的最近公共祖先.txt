# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def search_pq(self, node, p, q):
        if not node:
            return None
        
        if node == p or node == q:
            return node
        
        left = self.search_pq(node.left, p, q)
        right = self.search_pq(node.right, p, q)

        if left and right:
            return node
        
        return left if left else right

    def lowestCommonAncestor(self, root, p, q):
        """
        :type root: TreeNode
        :type p: TreeNode
        :type q: TreeNode
        :rtype: TreeNode
        """
        return self.search_pq(root, p, q)